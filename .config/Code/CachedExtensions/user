{"input":{"ourVersion":"1.36.0","commit":"0f3794b38477eea13fb47fbe15a42798e6129338","locale":"en","devMode":false,"absoluteFolderPath":"/home/emdash00/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1562461128743},"result":[{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.24.0","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.Navigate","onCommand:C_Cpp.GoToDeclaration","onCommand:C_Cpp.PeekDeclaration","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ShowReleaseNotes","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.PauseParsing","onCommand:C_Cpp.ResumeParsing","onCommand:C_Cpp.ShowParsingCommands","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onDebug","workspaceContains:/.vscode/c_cpp_properties.json"],"main":"/home/emdash00/.vscode/extensions/ms-vscode.cpptools-0.24.0/dist/main","contributes":{"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"machine"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"Description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","default":null,"description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows and \"~/.vscode-cpptools\" on Linux and Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"resource"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"resource","minimum":0},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.default.enableConfigurationSquiggles":{"type":["boolean","null"],"default":null,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.GoToDeclaration","title":"Go to Declaration","category":"C/C++"},{"command":"C_Cpp.PeekDeclaration","title":"Peek Declaration","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ShowReleaseNotes","title":"Show Release Notes","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.PauseParsing","title":"Pause Parsing","category":"C/C++"},{"command":"C_Cpp.ResumeParsing","title":"Resume Parsing","category":"C/C++"},{"command":"C_Cpp.ShowParsingCommands","title":"Show Parsing Commands","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}}}}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == c","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == cpp","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"},{"when":"editorLangId == c","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false},"[c]":{"editor.wordBasedSuggestions":false}}},"scripts":{"compile":"npm run vscode:prepublish","compileDev":"npm run prepublishjs && webpack --mode development","generateOptionsSchema":"gulp generateOptionsSchema","postinstall":"node ./node_modules/vscode/bin/install","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","pr-check":"gulp pr-check","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"npm run prepublishjs && webpack --mode production","watch":"webpack --watch --mode development"},"devDependencies":{"@types/minimatch":"^3.0.3","@types/mocha":"^5.2.7","@types/node":"^12.0.10","async-child-process":"^1.1.1","await-notify":"^1.0.1","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-mocha":"^6.0.0","gulp-tslint":"^8.1.4","ts-loader":"^6.0.4","tslint":"^5.18.0","tslint-microsoft-contrib":"^6.2.0","tslint-no-unused-expression-chai":"^0.1.4","typescript":"^3.5.2","vrsource-tslint-rules":"^6.0.0","vscode":"^1.1.35","webpack":"^4.35.2","webpack-cli":"^3.3.5"},"dependencies":{"escape-string-regexp":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.1","jsonc-parser":"^2.1.0","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^2.0.1","tmp":"^0.1.0","vscode-cpptools":"^2.1.2","vscode-debugadapter":"^1.34.0","vscode-debugprotocol":"^1.34.0","vscode-extension-telemetry":"^0.1.1","vscode-languageclient":"^5.2.1","yauzl":"^2.10.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2092533","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2092603","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2092602","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2092532","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2082216","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/emdash00/.vscode/extensions/ms-vscode.cpptools-0.24.0","path":"/home/emdash00/.vscode/extensions/ms-vscode.cpptools-0.24.0","scheme":"file"}},{"name":"java","displayName":"Language Support for Java(TM) by Red Hat","description":"Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...","author":"Red Hat","icon":"icons/icon128.png","license":"EPL-1.0","version":"0.46.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-java/issues","preview":true,"enableProposedApi":false,"engines":{"vscode":"^1.31.0"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-java"},"categories":["Programming Languages","Linters","Formatters","Snippets"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:build.gradle","workspaceContains:.classpath"],"main":"/home/emdash00/.vscode/extensions/redhat.java-0.46.0/dist/extension","contributes":{"languages":[{"id":"java","extensions":[".class"],"configuration":"./language-configuration.json"}],"snippets":[{"language":"java","path":"./snippets/java.json"}],"configuration":{"type":"object","title":"Java configuration","properties":{"java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (8 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"","scope":"window"},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-noverify -Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to bypass class verification, increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector","scope":"window"},"java.errors.incompleteClasspath.severity":{"type":["string"],"enum":["ignore","info","warning","error"],"default":"warning","description":"Specifies the severity of the message when the classpath is incomplete for a Java file","scope":"window"},"java.configuration.checkProjectSettingsExclusions":{"type":"boolean","default":true,"description":"Checks if the extension-generated project settings files (.project, .classpath, .factorypath, .settings/) should be excluded from the file explorer.","scope":"window"},"java.configuration.updateBuildConfiguration":{"type":["string"],"enum":["disabled","interactive","automatic"],"default":"interactive","description":"Specifies how modifications on build files update the Java classpath/configuration","scope":"window"},"java.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Java language server.","scope":"window"},"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Maven importer.","scope":"window"},"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle importer.","scope":"window"},"java.import.gradle.wrapper.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle wrapper.","scope":"window"},"java.import.gradle.version":{"type":"string","default":null,"description":"Gradle version, used if the gradle wrapper is missing or disabled.","scope":"window"},"java.maven.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable eager download of Maven source artifacts.","scope":"window"},"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the references code lens.","scope":"window"},"java.signatureHelp.enabled":{"type":"boolean","default":false,"description":"Enable/disable the signature help.","scope":"window"},"java.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the implementations code lens.","scope":"window"},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Path to Maven's settings.xml","scope":"window"},"java.format.enabled":{"type":"boolean","default":true,"description":"Enable/disable default Java formatter","scope":"window"},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable/disable auto organize imports on save action","scope":"window"},"java.import.exclusions":{"type":"array","description":"Configure glob patterns for excluding folders","default":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"],"scope":"window"},"java.contentProvider.preferred":{"type":"string","description":"Preferred content provider (a 3rd party decompiler id, usually)","default":null,"scope":"window"},"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable/disable the 'auto build'","scope":"window"},"java.maxConcurrentBuilds":{"type":"integer","default":1,"description":"Max simultaneous project builds","scope":"window","minimum":1},"java.completion.enabled":{"type":"boolean","default":true,"description":"Enable/disable code completion support","scope":"window"},"java.completion.overwrite":{"type":"boolean","default":true,"description":"When set to true, code completion overwrites the current text. When set to false, code is simply added instead.","scope":"window"},"java.completion.guessMethodArguments":{"type":"boolean","default":false,"description":"When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.","scope":"window"},"java.completion.favoriteStaticMembers":{"type":"array","description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*","org.mockito.Mockito.*","org.mockito.ArgumentMatchers.*","org.mockito.Answers.*"],"scope":"window"},"java.completion.importOrder":{"type":"array","description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group.","default":["java","javax","com","org"],"scope":"window"},"java.foldingRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.","scope":"window"},"java.progressReports.enabled":{"type":"boolean","description":"[Experimental] Enable/disable progress reports from background processes on the server.","default":true,"scope":"window"},"java.format.settings.url":{"type":"string","description":"Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).","default":null,"scope":"window"},"java.format.settings.profile":{"type":"string","description":"Optional formatter profile name from the Eclipse formatter settings.","default":null,"scope":"window"},"java.format.comments.enabled":{"type":"boolean","description":"Includes the comments during code formatting.","default":true,"scope":"window"},"java.format.onType.enabled":{"type":"boolean","description":"Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`","default":true,"scope":"window"},"java.codeGeneration.hashCodeEquals.useJava7Objects":{"type":"boolean","description":"Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.","default":false,"scope":"window"},"java.codeGeneration.hashCodeEquals.useInstanceof":{"type":"boolean","description":"Use 'instanceof' to compare types when generating the hashCode and equals methods.","default":false,"scope":"window"},"java.codeGeneration.useBlocks":{"type":"boolean","description":"Use blocks in 'if' statements when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.generateComments":{"type":"boolean","description":"Generate method comments when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.toString.template":{"type":"string","description":"The template for generating the toString method.","default":"${object.className} [${member.name()}=${member.value}, ${otherMembers}]"},"java.codeGeneration.toString.codeStyle":{"type":"string","enum":["STRING_CONCATENATION","STRING_BUILDER","STRING_BUILDER_CHAINED","STRING_FORMAT"],"enumDescriptions":["String concatenation","StringBuilder/StringBuffer","StringBuilder/StringBuffer - chained call","String.format/MessageFormat"],"description":"The code style for generating the toString method.","default":"STRING_CONCATENATION"},"java.codeGeneration.toString.skipNullValues":{"type":"boolean","description":"Skip null values when generating the toString method.","default":false,"scope":"window"},"java.codeGeneration.toString.listArrayContents":{"type":"boolean","description":"List contents of arrays instead of using native toString().","default":true,"scope":"window"},"java.codeGeneration.toString.limitElements":{"type":"integer","description":"Limit number of items in arrays/collections/maps to list, if 0 then list all.","default":0,"scope":"window"}}},"commands":[{"command":"java.projectConfiguration.update","title":"Update project configuration","category":"Java"},{"command":"java.open.serverLog","title":"Open Java Language Server log file","category":"Java"},{"command":"java.workspace.compile","title":"Force Java compilation","category":"Java"},{"command":"java.open.formatter.settings","title":"Open Java formatter settings","category":"Java"},{"command":"java.clean.workspace","title":"Clean the Java language server workspace","category":"Java"},{"command":"java.project.updateSourceAttachment","title":"Attach Source","category":"Java"},{"command":"java.project.addToSourcePath","title":"Add Folder to Java Source Path","category":"Java"},{"command":"java.project.removeFromSourcePath","title":"Remove Folder from Java Source Path","category":"Java"},{"command":"java.project.listSourcePaths","title":"List all Java source paths","category":"Java"}],"keybindings":[{"command":"java.projectConfiguration.update","key":"shift+alt+u","when":"editorFocus"},{"command":"java.workspace.compile","key":"shift+alt+b"}],"menus":{"explorer/context":[{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.addToSourcePath","group":"1_javaactions@1"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.removeFromSourcePath","group":"1_javaactions@2"}],"editor/context":[{"command":"java.project.updateSourceAttachment","when":"editorReadonly && editorLangId == java","group":"1_javaactions"},{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"}],"commandPalette":[{"command":"java.projectConfiguration.update","when":"javaLSReady"},{"command":"java.workspace.compile","when":"javaLSReady"},{"command":"java.project.listSourcePaths","when":"javaLSReady"},{"command":"java.project.updateSourceAttachment","when":"false"},{"command":"java.project.addToSourcePath","when":"false"},{"command":"java.project.removeFromSourcePath","when":"false"}]}},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"tsc -p ./","watch":"webpack --mode development --watch --info-verbosity verbose","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","build-server":"./node_modules/.bin/gulp build_server","watch-server":"./node_modules/.bin/gulp watch_server","webpack":"webpack --mode development"},"devDependencies":{"@types/glob":"5.0.30","@types/mocha":"^5.2.5","@types/node":"^6.0.40","gulp":"^4.0.0","gulp-decompress":"2.0.1","gulp-download":"0.0.1","mocha":"^5.2.0","ts-loader":"^5.3.1","tslint":"^5.11.0","typescript":"^3.4.1","typescript-tslint-plugin":"^0.3.1","vscode":"^1.1.33","webpack":"^4.27.1","webpack-cli":"^3.1.2"},"dependencies":{"vscode-languageclient":"~5.1.1","find-java-home":"0.2.0","tmp":"^0.0.33","path-exists":"^3.0.0","expand-home-dir":"^0.0.3","glob":"^7.1.3"},"uuid":"198a707e-28af-4e84-8610-6e2f628dd12d","isBuiltin":false,"isUnderDevelopment":false,"id":"redhat.java","identifier":{"value":"redhat.java","_lower":"redhat.java"},"extensionLocation":{"$mid":1,"fsPath":"/home/emdash00/.vscode/extensions/redhat.java-0.46.0","path":"/home/emdash00/.vscode/extensions/redhat.java-0.46.0","scheme":"file"}},{"name":"vscode-java-debug","displayName":"Debugger for Java","description":"A lightweight Java debugger for Visual Studio Code","version":"0.20.0","publisher":"vscjava","preview":true,"aiKey":"26e39823-0967-4af2-acc9-4d111ffda880","icon":"logo.png","keywords":["java","debug","debugging","debugger"],"engines":{"vscode":"^1.32.0"},"license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-debug.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-java-debug/issues"},"homepage":"https://github.com/Microsoft/vscode-java-debug/blob/master/README.md","categories":["Debuggers","Programming Languages","Other"],"activationEvents":["onLanguage:java","onDebugInitialConfigurations","onDebugResolve:java","onCommand:JavaDebug.SpecifyProgramArgs"],"main":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-debug-0.20.0/dist/extension","contributes":{"javaExtensions":["./server/com.microsoft.java.debug.plugin-0.20.0.jar"],"commands":[{"command":"java.debug.hotCodeReplace","title":"Hot Code Replace","icon":{"dark":"images/commands/hot_code_replace.svg","light":"images/commands/hot_code_replace.svg"}}],"menus":{"debug/toolBar":[{"command":"java.debug.hotCodeReplace","group":"navigation@100","when":"inDebugMode && debugType == java && javaHotReload == 'manual'"}],"commandPalette":[{"command":"java.debug.hotCodeReplace","when":"false"}]},"debuggers":[{"type":"java","label":"Java","languages":["java"],"enableBreakpointsFor":{"languageIds":["java"]},"variables":{"SpecifyProgramArgs":"JavaDebug.SpecifyProgramArgs"},"configurationAttributes":{"launch":{"required":["mainClass"],"properties":{"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.","default":""},"mainClass":{"type":"string","description":"The fully qualified class name (e.g. [java module name/]com.xyz.MainApp) or the java file path of the program entry.","default":""},"args":{"type":["array","string"],"description":"The command line arguments passed to the program.","default":""},"vmArgs":{"type":["array","string"],"description":"The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).","default":""},"modulePaths":{"type":"array","items":{"type":"string"},"description":"The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"classPaths":{"type":"array","items":{"type":"string"},"description":"The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.","default":[]},"encoding":{"type":"string","description":"The file.encoding setting for the JVM. If not specified, 'UTF-8' will be used. Possible values can be found in http://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.","default":"UTF-8"},"cwd":{"type":"string","description":"The working directory of the program. Defaults to the current workspace root.","default":"${workspaceFolder}"},"env":{"type":"object","description":"The extra environment variables for the program.","default":{}},"stopOnEntry":{"type":"boolean","description":"Automatically pause the program after launching.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch the program.","default":"internalConsole"},"shortenCommandLine":{"type":"string","enum":["none","jarmanifest","argfile","auto"],"enumDescriptions":["Launch the program with the standard command line 'java [options] classname [args]'.","Generate the classpath parameters to a temporary classpath.jar file, and launch the program with the command line 'java -cp classpath.jar classname [args]'.","Generate the classpath parameters to a temporary argument file, and launch the program with the command line 'java @argfile [args]'. This value only applies to Java 9 and higher.","Automatically detect the command line length and determine whether to shorten the command line via an appropriate approach."],"description":"When the project has long classpath or big VM arguments, the command line to launch the program may exceed the maximum command line string limitation allowed by the OS. This configuration item provides multiple approaches to shorten the command line.","default":"auto"},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"classNameFilters":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"classNameFilters":{"type":"array","description":"Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.","item":{"type":"string"},"default":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":true},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":true},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":true}}}}},"attach":{"required":["hostName","port"],"properties":{"hostName":{"type":"string","default":"localhost","description":"The host name or ip address of remote debuggee."},"port":{"type":"number","description":"The debug port of remote debuggee."},"timeout":{"type":"number","default":30000,"description":"Timeout value before reconnecting, in milliseconds (default to 30000ms)."},"sourcePaths":{"type":"array","items":{"type":"string"},"default":[],"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories."},"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.","default":""},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"classNameFilters":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"classNameFilters":{"type":"array","description":"Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.","item":{"type":"string"},"default":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false}}}}}},"configurationSnippets":[{"label":"Java: Launch Program","description":"Add a new configuration for launching a java program.","body":{"type":"java","name":"Debug (Launch)","request":"launch","mainClass":""}},{"label":"Java: Launch Program in External Terminal","description":"Add a new configuration for launching a java program in the external terminal.","body":{"type":"java","name":"Debug (Launch) - External Terminal","request":"launch","console":"externalTerminal","mainClass":""}},{"label":"Java: Launch Program in Current File","description":"Add a new configuration for launching current java file.","body":{"type":"java","name":"Debug (Launch) - Current File","request":"launch","mainClass":"^\"\\${file}\""}},{"label":"Java: Launch Program with Arguments Prompt","description":"Add a new configuration for launching a java program with arguments prompt.","body":{"type":"java","name":"Debug (Launch) with Arguments Prompt","request":"launch","mainClass":"","args":"^\"\\${command:SpecifyProgramArgs}\""}},{"label":"Java: Attach","description":"Add a new configuration for attaching to a running java program.","body":{"type":"java","name":"Debug (Attach)","request":"attach","hostName":"localhost","port":"<debug port of the debuggee>"}},{"label":"Java: Attach to Remote Program","description":"Add a new configuration for attaching to a remote java program.","body":{"type":"java","name":"Debug (Attach) - Remote","request":"attach","hostName":"<The host name or ip address of remote debuggee>","port":"<debug port of remote debuggee>"}}]}],"configuration":{"type":"object","title":"Java Debugger","properties":{"java.debug.logLevel":{"type":"string","default":"warn","description":"Minimum level of debugger logs that are sent to VS Code.","enum":["error","warn","info","verbose"]},"java.debug.settings.showHex":{"type":"boolean","description":"Show numbers in hex format in \"Variables\" viewlet.","default":false},"java.debug.settings.showStaticVariables":{"type":"boolean","description":"Show static variables in \"Variables\" viewlet.","default":false},"java.debug.settings.showQualifiedNames":{"type":"boolean","description":"Show fully qualified class names in \"Variables\" viewlet.","default":false},"java.debug.settings.showLogicalStructure":{"type":"boolean","description":"Show the logical structure for the Collection and Map classes in \"Variables\" viewlet.","default":true},"java.debug.settings.showToString":{"type":"boolean","description":"Show 'toString()' value for all classes that override 'toString' method in \"Variables\" viewlet.","default":true},"java.debug.settings.maxStringLength":{"type":"number","description":"The maximum length of strings displayed in \"Variables\" or \"Debug Console\" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.","default":0},"java.debug.settings.hotCodeReplace":{"type":"string","default":"manual","description":"Reload the changed Java classes during debugging. Make sure 'java.autobuild.enabled' is not disabled.","enum":["auto","manual","never"]},"java.debug.settings.enableRunDebugCodeLens":{"type":"boolean","description":"Enable the run and debug code lens providers over main methods.","default":true},"java.debug.settings.forceBuildBeforeLaunch":{"type":"boolean","description":"Force building the workspace before launching java program.","default":true},"java.debug.settings.console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.","default":"internalConsole"}}}},"scripts":{"vscode:prepublish":"npm run build","compile":"tsc -p . && webpack --config webpack.config.js","watch":"webpack --config webpack.config.js --watch --info-verbosity verbose","build":"webpack --config webpack.config.js --mode=\"production\"","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./scripts/download-vscode-for-system-tests && node ./scripts/install-vsix-dependencies redhat.java && node ./scripts/install-vsix-dependencies vscode-java-debug-0.20.0.vsix && node ./scripts/run-vscode-tests"},"extensionDependencies":["redhat.java"],"devDependencies":{"@types/lodash":"^4.14.116","@types/mocha":"^5.2.5","@types/node":"^8.10.22","cross-env":"^5.2.0","gulp":"^4.0.0","gulp-tslint":"^8.1.2","mocha":"^5.2.0","shelljs":"^0.8.2","ts-loader":"^5.3.3","tslint":"^5.7.0","typescript":"^3.0.1","vscode":"^1.1.33","webpack":"^4.29.3","webpack-cli":"^3.2.3"},"dependencies":{"lodash":"^4.17.11","vscode-extension-telemetry":"0.1.1","vscode-extension-telemetry-wrapper":"0.4.0"},"uuid":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281","isBuiltin":false,"isUnderDevelopment":false,"id":"vscjava.vscode-java-debug","identifier":{"value":"vscjava.vscode-java-debug","_lower":"vscjava.vscode-java-debug"},"extensionLocation":{"$mid":1,"fsPath":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-debug-0.20.0","path":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-debug-0.20.0","scheme":"file"}},{"name":"vscode-java-dependency","displayName":"Java Dependency Viewer","description":"Manage Java Dependencies in VSCode","version":"0.5.1","publisher":"vscjava","preview":true,"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","keywords":["java","project","explorer"],"engines":{"vscode":"^1.28.0"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-dependency.git"},"homepage":"https://github.com/Microsoft/vscode-java-dependency/blob/master/README.md","icon":"logo.png","activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:.classpath","workspaceContains:build.gradle","onCommand:java.project.create"],"license":"MIT","main":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-dependency-0.5.1/dist/extension","contributes":{"javaExtensions":["./server/com.microsoft.jdtls.ext.core-0.5.1.jar"],"commands":[{"command":"java.project.create","title":"Create Java Project","category":"Java"},{"command":"java.view.package.refresh","title":"Refresh","category":"Java","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"java.view.package.changeToHierarchicalPackageView","title":"Change to hierarchical package representation","category":"Java","icon":{"dark":"images/dark/icon-hierarchical.svg","light":"images/light/icon-hierarchical.svg"}},{"command":"java.view.package.changeToFlatPackageView","title":"Change to flat package representation","category":"Java","icon":{"dark":"images/dark/icon-flat.svg","light":"images/light/icon-flat.svg"}},{"command":"java.view.package.linkWithFolderExplorer","title":"Synchronize dependency viewer selection with folder explorer","category":"Java","icon":{"dark":"images/dark/icon-unlink.svg","light":"images/light/icon-unlink.svg"}},{"command":"java.view.package.unlinkWithFolderExplorer","title":"Desynchronize dependency viewer selection with folder explorer","category":"Java","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}}],"configuration":{"type":"object","title":"Java Dependency Configuration","properties":{"java.dependency.showOutline":{"type":"boolean","description":"Enable show outline in the Java Dependency explorer","default":true},"java.dependency.syncWithFolderExplorer":{"type":"boolean","description":"Synchronize dependency viewer selection with folder explorer","default":true},"java.dependency.autoRefresh":{"type":"boolean","description":"Synchronize dependency viewer with changes","default":true},"java.dependency.packagePresentation":{"type":"string","enum":["flat","hierarchical"],"description":"Package presentation mode: flat or hierarchical","default":"flat"}}},"menus":{"view/title":[{"command":"java.view.package.refresh","when":"view == javaDependencyExplorer","group":"navigation@2"},{"command":"java.view.package.changeToHierarchicalPackageView","when":"view == javaDependencyExplorer && config.java.dependency.packagePresentation == flat","group":"navigation@1"},{"command":"java.view.package.changeToFlatPackageView","when":"view == javaDependencyExplorer && config.java.dependency.packagePresentation != flat","group":"navigation@1"},{"command":"java.view.package.linkWithFolderExplorer","when":"view == javaDependencyExplorer && config.java.dependency.syncWithFolderExplorer != true","group":"navigation@0"},{"command":"java.view.package.unlinkWithFolderExplorer","when":"view == javaDependencyExplorer && config.java.dependency.syncWithFolderExplorer == true","group":"navigation@0"}]},"views":{"explorer":[{"id":"javaDependencyExplorer","name":"Java Dependencies","when":"extensionActivated"}]}},"scripts":{"compile":"tsc -watch -p ./","watch":"webpack --mode development --watch --info-verbosity verbose","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./scripts/download-vscode-for-system-tests && node ./scripts/install-vsix-dependencies redhat.java && node ./scripts/install-vsix-dependencies vscode-java-dependency-0.5.1.vsix && node ./scripts/run-vscode-tests","build-server":"./node_modules/.bin/gulp build_server","vscode:prepublish":"tsc -p ./ && webpack --mode production"},"extensionDependencies":["redhat.java"],"devDependencies":{"@types/fs-extra":"^5.0.4","@types/mocha":"^5.2.5","@types/node":"^8.10.36","@types/xml2js":"^0.4.3","cross-env":"^5.2.0","gulp":"^4.0.0","gulp-copy":"^4.0.1","gulp-tslint":"^8.1.3","mocha":"^5.2.0","shelljs":"^0.8.3","ts-loader":"^5.3.1","tslint":"^5.11.0","typescript":"^3.1.6","vscode":"^1.1.33","webpack":"^4.27.1","webpack-cli":"^3.1.2"},"dependencies":{"find-java-home":"^0.2.0","fs-extra":"^7.0.1","vscode-extension-telemetry-wrapper":"^0.4.0","xml2js":"^0.4.19"},"uuid":"7865e561-1c83-410e-9b99-aabada597a7e","isBuiltin":false,"isUnderDevelopment":false,"id":"vscjava.vscode-java-dependency","identifier":{"value":"vscjava.vscode-java-dependency","_lower":"vscjava.vscode-java-dependency"},"extensionLocation":{"$mid":1,"fsPath":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-dependency-0.5.1","path":"/home/emdash00/.vscode/extensions/vscjava.vscode-java-dependency-0.5.1","scheme":"file"}},{"name":"vscode-wpilib","displayName":"WPILib","author":"WPILib Suite","description":"VSCode extension for WPILib Team Use","version":"2019.4.1","publisher":"wpilibsuite","license":"BSD-3-Clause","icon":"wpilib-128.png","engines":{"vscode":"^1.27.0"},"categories":["Other"],"activationEvents":["workspaceContains:.wpilib/wpilib_preferences.json","workspaceContains:build/vscodeconfig.json","onCommand:wpilibcore.startRioLog","onCommand:wpilibcore.setTeamNumber","onCommand:wpilibcore.startTool","onCommand:wpilibcore.buildCode","onCommand:wpilibcore.testCode","onCommand:wpilibcore.deployCode","onCommand:wpilibcore.debugCode","onCommand:wpilibcore.simulateCode","onCommand:wpilibcore.setLanguage","onCommand:wpilibcore.setAutoSave","onCommand:wpilibcore.setSkipTests","onCommand:wpilibcore.setOffline","onCommand:wpilibcore.setStopSimulationOnEntry","onCommand:wpilibcore.setStartRioLog","onCommand:wpilibcore.setDeployOffline","onCommand:wpilibcore.createCommand","onCommand:wpilibcore.cancelTasks","onCommand:wpilibcore.help","onCommand:wpilibcore.openCommandPalette","onCommand:wpilibcore.refreshCppProperties","onCommand:wpilibcore.selectCppToolchain","onCommand:wpilibcore.importEclipseProject","onCommand:wpilibcore.createNewProject","onCommand:wpilibcore.manageVendorLibs","onCommand:wpilibcore.setJavaHome","onCommand:wpilibcore.checkForUpdates","onCommand:wpilibcore.installGradleTools","onCommand:wpilibcore.showLogFolder","onCommand:wpilibcore.runGradleCommand","onCommand:wpilibcore.resetAutoUpdate","onCommand:wpilibcore.changeDesktop"],"main":"/home/emdash00/.vscode/extensions/wpilibsuite.vscode-wpilib-2019.4.1/out/extension","contributes":{"taskDefinitions":[{"type":"wpilibgradle"}],"debuggers":[{"type":"wpilib","label":"WPILib Debug","configurationAttributes":{"launch":{"required":["desktop"],"properties":{"desktop":{"type":"boolean","description":"True for desktop, false for roboRIO"}}}}}],"jsonValidation":[{"fileMatch":"wpilib_preferences.json","url":"./resources/wpilibschema.json"},{"fileMatch":"vendordeps/*.json","url":"./resources/vendorschema.json"}],"configuration":{"type":"object","title":"WPILib configuration","properties":{"wpilib.additionalGradleArguments":{"type":"string","default":"","description":"For debugging only, passes extra arguments to gradle invokations","scope":"resource"},"wpilib.autoSaveOnDeploy":{"type":"boolean","default":true,"description":"Automatically save all files on deploy","scope":"resource"},"wpilib.autoStartRioLog":{"type":"boolean","default":true,"description":"Automatically start RioLog on deploy","scope":"resource"},"wpilib.alwaysAskForTeamNumber":{"type":"boolean","default":false,"description":"Always ask for a team number, even if set","scope":"resource"},"wpilib.offline":{"type":"boolean","default":false,"description":"Perform gradle commands other then deploy/debug with offline flag","scope":"resource"},"wpilib.deployOffline":{"type":"boolean","default":true,"description":"Perform gradle deploy command with offline flag","scope":"resource"},"wpilib.skipTests":{"type":"boolean","default":false,"description":"Set to skip running tests on build","scope":"resource"},"wpilib.stopSimulationOnEntry":{"type":"boolean","default":"false","description":"Set to make simulation code stop automatically on entry","scope":"resource"}}},"commands":[{"command":"wpilibcore.startRioLog","title":"Start RioLog","category":"WPILib"},{"command":"wpilibcore.setTeamNumber","title":"Set Team Number","category":"WPILib"},{"command":"wpilibcore.startTool","title":"Start Tool","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.buildCode","title":"Build Robot Code","category":"WPILib"},{"command":"wpilibcore.testCode","title":"Test Robot Code","category":"WPILib"},{"command":"wpilibcore.deployCode","title":"Deploy Robot Code","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.debugCode","title":"Debug Robot Code","category":"WPILib"},{"command":"wpilibcore.simulateCode","title":"Simulate Robot Code on Desktop","category":"WPILib"},{"command":"wpilibcore.setLanguage","title":"Change Language Setting","category":"WPILib"},{"command":"wpilibcore.setAutoSave","title":"Change Auto Save On Deploy Setting","category":"WPILib"},{"command":"wpilibcore.setSkipTests","title":"Change Skip Tests On Deploy Setting","category":"WPILib"},{"command":"wpilibcore.setOffline","title":"Change Run Commands Except Deploy/Debug in Offline Mode Setting","category":"WPILib"},{"command":"wpilibcore.setStopSimulationOnEntry","title":"Change Stop Simulation on Entry Setting","category":"WPILib"},{"command":"wpilibcore.setStartRioLog","title":"Change Auto Start RioLog on Deploy Setting","category":"WPILib"},{"command":"wpilibcore.setDeployOffline","title":"Change Run Deploy/Debug Command in Offline Mode Setting","category":"WPILib"},{"command":"wpilibcore.createCommand","title":"Create a new class/command","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.cancelTasks","title":"Cancel currently running tasks","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.help","title":"Open WPILib Help","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.openCommandPalette","title":"Open WPILib Command Palette","category":"WPILib","icon":"resources/wpilib.svg"},{"command":"wpilibcore.refreshCppProperties","title":"Refresh C++ Intellisense","category":"WPILib C++"},{"command":"wpilibcore.selectCppToolchain","title":"Select Current C++ Toolchain","category":"WPILib C++"},{"command":"wpilibcore.importEclipseProject","title":"Import a WPILib Eclipse project","category":"WPILib"},{"command":"wpilibcore.createNewProject","title":"Create a new project","category":"WPILib"},{"command":"wpilibcore.manageVendorLibs","title":"Manage Vendor Libraries","category":"WPILib"},{"command":"wpilibcore.setJavaHome","title":"Set VS Code Java Home to FRC Home","category":"WPILib"},{"command":"wpilibcore.checkForUpdates","title":"Check for WPILib Updates","category":"WPILib"},{"command":"wpilibcore.installGradleTools","title":"Install tools from GradleRIO","category":"WPILib"},{"command":"wpilibcore.showLogFolder","title":"Show Log Folder","category":"WPILib"},{"command":"wpilibcore.runGradleCommand","title":"Run a command in Gradle","category":"WPILib"},{"command":"wpilibcore.resetAutoUpdate","title":"Reset Ask for WPILib Updates Flag","category":"WPILib"},{"command":"wpilibcore.changeDesktop","title":"Change Desktop Support Enabled Setting","category":"WPILib"}],"views":{"explorer":[{"id":"cppDependencies","name":"C++ Dependencies","when":"isWPILibProvidedCpp"}]},"keybindings":[{"command":"wpilibcore.deployCode","key":"shift+F5"}],"menus":{"editor/title":[{"command":"wpilibcore.openCommandPalette","group":"navigation@9"},{"when":"isWPILibProject","command":"wpilibcore.deployCode","group":"wpilib@1"},{"when":"isWPILibProject","command":"wpilibcore.buildCode","group":"wpilib@2"},{"when":"isWPILibProject","command":"wpilibcore.testCode","group":"wpilib@3"},{"command":"wpilibcore.startTool","group":"wpilib@4"}],"explorer/context":[{"when":"resourceFilename == build.gradle","command":"wpilibcore.deployCode","group":"wpilib"},{"when":"resourceFilename == build.gradle","command":"wpilibcore.buildCode","group":"wpilib"},{"when":"resourceFilename == build.gradle","command":"wpilibcore.testCode","group":"wpilib"},{"when":"resourceFilename == build.gradle","command":"wpilibcore.manageVendorLibs","group":"wpilib"},{"when":"explorerResourceIsFolder && isWPILibProject","command":"wpilibcore.createCommand","group":"wpilib"}]}},"repository":"https://github.com/wpilibsuite/vscode-wpilib","homepage":"https://github.com/wpilibsuite/vscode-wpilib","scripts":{"vscode:prepublish":"gulp build && npm run lint && webpack --mode production","clean":"rmdir-cli out","lint":"tslint -c tslint.json -p tsconfig.json","webpack":"webpack --mode development","webpack-watch":"webpack --mode development --watch","postinstall":"node ./node_modules/vscode/bin/install","unittest":"mocha -r ts-node/register -u tdd src/unittest/*.ts","gulp":"gulp","test":"npm run webpack && node ./node_modules/vscode/bin/test","updateActivation":"gulp update-activation","vscePackage":"vsce package"},"devDependencies":{"@types/glob":"^7.1.1","@types/mkdirp":"^0.5.2","@types/mocha":"^5.2.5","@types/ncp":"^2.0.1","@types/node":"^8.9.5","@types/node-fetch":"^2.1.4","@types/triple-beam":"^1.3.0","@types/xml2js":"^0.4.3","copy-webpack-plugin":"^4.6.0","del":"^3.0.0","event-stream":"=3.3.4","gulp":"^4.0.0","gulp-filter":"^5.1.0","gulp-json-transform":"^0.4.5","gulp-typescript":"^5.0.0-alpha.3","gulp-sourcemaps":"^2.6.4","mocha":"^5.2.0","rmdir-cli":"^2.0.6","run-sequence":"^2.2.1","ts-loader":"^5.3.0","ts-node":"^7.0.1","tslint":"^5.11.0","typescript":"^3.0.1","vsce":"^1.57.0","vscode":"^1.1.29","vscode-nls-dev":"^3.2.3","webpack":"^4.25.1","webpack-cli":"^3.1.2"},"dependencies":{"glob":"^7.1.3","java-properties":"^0.2.10","jsonc-parser":"^2.0.2","logform":"^1.10.0","mkdirp":"^0.5.1","ncp":"^2.0.0","node-fetch":"^2.3.0","triple-beam":"^1.3.0","vscode-cpptools":"2.1.2","vscode-jsonrpc":"^4.0.0","vscode-nls":"^4.0.0","vscode-wpilibapi":"^2019.3.1","winston":"^3.2.1","winston-transport":"^4.3.0","wpilib-riolog":"^0.2.0","xml2js":"^0.4.19"},"uuid":"db1f0699-3856-4ec0-8c92-5a48a2aa89ba","isBuiltin":false,"isUnderDevelopment":false,"id":"wpilibsuite.vscode-wpilib","identifier":{"value":"wpilibsuite.vscode-wpilib","_lower":"wpilibsuite.vscode-wpilib"},"extensionLocation":{"$mid":1,"fsPath":"/home/emdash00/.vscode/extensions/wpilibsuite.vscode-wpilib-2019.4.1","path":"/home/emdash00/.vscode/extensions/wpilibsuite.vscode-wpilib-2019.4.1","scheme":"file"}}]}